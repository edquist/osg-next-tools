#!/bin/bash

yum_dir=${1:-/usr/local/repo/3.0}
yum_dir=$(dirname "$yum_dir")/$(basename "$yum_dir")
yum_dir_old=$(dirname "$yum_dir")/.$(basename "$yum_dir").old
yum_dir_new=$(dirname "$yum_dir")/.$(basename "$yum_dir").new

die () {
    echo "$@" 1>&2
    exit 1
}

# Check for expected environment
if [ ! -d $yum_dir ]; then
    die "$yum_dir doesn't exist: Won't be able to back up old yum structure."
fi

if [ -d $yum_dir_old ]; then
    die "$yum_dir_old already exists: Won't be able to back up old yum structure."
fi

if [ -d $yum_dir_new ]; then
    die "$yum_dir_new already exists: Won't be able to create symlinks"
fi

(
    set -o errexit

    pushd `dirname $yum_dir` > /dev/null
    
    echo "Setting up '$yum_dir_new'..."
    for dver in el5 el6; do
        mkdir -p "$yum_dir_new/$dver"
        for release in contrib development testing release; do
            ln -s "../../osg/3.1/$dver/$release" "$yum_dir_new/$dver/osg-$release"
            if [ $release != "contrib" ]; then
                ln -s "../../osg/upcoming/$dver/$release" "$yum_dir_new/$dver/osg-upcoming-$release"
            fi
        done
    done

    popd > /dev/null
        
    echo "Moving dirs into their proper locations..."
    mv $yum_dir $yum_dir_old
    mv $yum_dir_new $yum_dir
)
ret=$?
if [ $ret -eq 0 ]; then
    echo "Migration successful."
    echo "Verify contents of '$yum_dir', then go ahead and remove '$yum_dir_old'."
else
    echo "Migration failed somewhere."
    echo "ROLLBACK! ROLLBACK!"
fi
